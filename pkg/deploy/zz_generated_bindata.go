// Code generated for package deploy by go-bindata DO NOT EDIT. (@generated)
// sources:
// manifests/ccm.yaml
// manifests/coredns.yaml
// manifests/local-storage.yaml
// manifests/metrics-server/aggregated-metrics-reader.yaml
// manifests/metrics-server/auth-delegator.yaml
// manifests/metrics-server/auth-reader.yaml
// manifests/metrics-server/metrics-apiservice.yaml
// manifests/metrics-server/metrics-server-deployment.yaml
// manifests/metrics-server/metrics-server-service.yaml
// manifests/metrics-server/resource-reader.yaml
// manifests/rolebindings.yaml
// manifests/traefik.yaml
//go:build !no_stage
// +build !no_stage

package deploy

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ccmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x8f\x13\x31\x0c\x85\xef\xf3\x2b\xa2\x1e\x91\xd2\x15\xe2\x82\xe6\x08\x07\xee\x2b\xc1\xdd\x4d\x1e\xdd\xd0\x4c\x1c\xd9\x4e\x61\xf9\xf5\x68\x3a\x5d\x51\x3a\xdb\xd2\x16\x10\x7b\x8b\xac\xf8\xf3\xf3\x73\x62\xaa\xe9\x13\x44\x13\x97\xde\xc9\x8a\xc2\x92\x9a\x3d\xb0\xa4\xef\x64\x89\xcb\x72\xf3\x56\x97\x89\xef\xb6\xaf\xbb\x4d\x2a\xb1\x77\xef\x73\x53\x83\xdc\x73\x46\x37\xc0\x28\x92\x51\xdf\x39\x57\x68\x40\xef\x36\x6f\xd4\x87\xcc\x2d\xfa\xc0\xc5\x84\x73\x86\xf8\x81\x0a\xad\x21\x9d\xb4\x0c\xed\x3b\xef\xa8\xa6\x0f\xc2\xad\xea\x98\xe8\x5d\x60\x96\x98\xca\x61\xbd\xce\x39\x81\x72\x93\x80\xfd\xa5\x0c\x52\x68\xe7\xdc\x16\xb2\xda\xc7\xd6\xb0\x09\x20\x20\xc3\xee\xd8\x6a\x1c\x8f\xb3\x1a\x8b\xc5\x1c\x89\x2d\x8a\x1d\x21\x0f\x50\x95\x2c\x3c\x5c\x0d\x2d\x1c\x8f\x65\x2e\x5e\x2d\xae\xc8\xbd\x53\x23\x6b\xba\x0b\x28\x64\x9b\xc2\x61\xec\x00\x3b\xe9\xbb\x08\xfc\xc4\x99\xf2\x38\x9e\xf0\x31\x27\x9d\x0e\x5f\x6f\x42\xcf\xb4\x5d\xeb\xdd\x9e\x45\x21\x70\x3b\x37\x99\x51\xef\x65\x86\xd2\x00\xad\x34\x93\xf7\x3b\x16\xd5\xaa\x73\x5a\x24\x0c\x5c\x14\xc7\xca\x9e\x9f\x6f\x4c\x1a\x78\x0b\x79\xdc\x3f\xe9\xe7\x1e\x60\x89\x95\x53\x31\xcd\x73\x07\x4f\xcd\xc4\xfb\xee\xf6\x1f\xfb\x2e\x95\x98\xca\xfa\xea\x8f\xcb\x19\xf7\xf8\x3c\xde\x7e\xea\xf2\x4c\xe5\xce\xb9\xf9\xaa\xb8\xa8\x8e\xb6\xd5\x17\x04\xdb\xed\x88\x09\xf1\x51\x21\x97\xe5\xba\x9f\xc3\xee\xdd\xa6\xad\xe0\xf5\x51\x0d\xc3\x7f\x71\xcc\x8f\x7c\x1f\x91\xb1\x26\xe3\xbf\x6a\xe0\xd4\x55\x7f\x54\xe0\xa5\x38\xf7\x87\x96\xa1\x58\x0a\x3b\xb2\x17\x50\x3c\x27\xee\x46\x4b\x7f\xf1\x12\xdf\x0c\x65\xec\xcd\x53\x4d\xe3\xf2\x39\x29\xe3\x9f\xf8\xfb\x23\x00\x00\xff\xff\xde\xc0\x02\x82\x7a\x07\x00\x00")

func ccmYamlBytes() ([]byte, error) {
	return bindataRead(
		_ccmYaml,
		"ccm.yaml",
	)
}

func ccmYaml() (*asset, error) {
	bytes, err := ccmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ccm.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _corednsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x51\x6f\xdb\x38\x12\x7e\xf7\xaf\x20\x04\xe4\xe5\x70\x72\xe2\x0b\xda\xcb\xf1\x2d\x8d\xdd\x36\xb8\xc4\x35\x6c\xa7\x40\xb1\x58\x04\x34\x35\xb6\xb8\xa1\x38\x5c\x92\x72\xe2\xed\xe6\xbf\x2f\x28\xc9\x32\x69\x2b\x69\x92\xed\xea\x49\xd2\x70\x66\x38\x1f\x67\xbe\x19\x32\x2d\xbe\x82\xb1\x02\x15\x25\xeb\x41\xef\x4e\xa8\x8c\x92\x19\x98\xb5\xe0\x70\xce\x39\x96\xca\xf5\x0a\x70\x2c\x63\x8e\xd1\x1e\x21\x8a\x15\x40\x09\x47\x03\x99\xb2\xcd\xb7\xd5\x8c\x03\x25\x77\xe5\x02\x52\xbb\xb1\x0e\x8a\x5e\x9a\xa6\xbd\xd0\xb4\x59\x30\xde\x67\xa5\xcb\xd1\x88\x3f\x98\x13\xa8\xfa\x77\x67\xb6\x2f\xf0\xb8\x75\x7a\x21\x4b\xeb\xc0\x4c\x51\x42\xe4\x51\xb2\x05\x48\xeb\xdf\x48\xe5\xc2\x28\x70\x50\xa9\x2e\x10\x9d\x75\x86\x69\x2d\xd4\xaa\xf6\x91\x66\xb0\x64\xa5\x74\xb6\xdd\x6a\xbd\x21\xba\xdd\xb1\x29\x25\x58\xda\x4b\x09\xd3\xe2\x93\xc1\x52\x57\x96\x53\x92\x24\x3d\x42\x0c\x58\x2c\x0d\x87\xe6\x1f\xa8\x4c\xa3\x50\x95\xb1\x94\xd8\x1a\x94\xfa\x43\x63\x56\xbf\xb4\xf1\xfb\xcf\x35\x98\x45\xa3\x2b\x85\x75\xd5\xcb\x3d\x73\x3c\x3f\xf4\x97\x09\xcb\x71\x0d\x66\xd3\xe0\xf0\x8c\x77\x29\x7e\x68\xfd\x6f\xa1\xfd\x41\xa8\x4c\xa8\x55\x04\x3a\x53\x0a\x5d\xa5\xd9\x20\xdf\x65\x32\x3a\x0c\x56\x3a\x2c\x75\xc6\x1c\x50\x92\x38\x53\x42\xf2\xf3\xcf\x0e\x25\x4c\x61\x59\xed\xaf\x41\xf3\x99\x58\x7b\x84\x1c\x26\xd6\x13\x96\x6d\xb9\xf8\x0d\xb8\xab\x12\xa3\xb3\x04\xde\x9c\xf8\x3b\xc0\x51\x2d\xc5\xea\x9a\xe9\xb7\x94\xd3\x76\xf9\x05\x1a\x58\x0a\x09\x94\xfc\x59\x61\xda\xa7\xef\x4e\xc9\xf7\xea\xd5\x3f\x60\x0c\x1a\xdb\x7e\xe6\xc0\xa4\xcb\xdb\x4f\x03\x2c\xdb\xb4\x5f\xbb\xe3\x20\x47\xdf\x2f\xae\x6e\x66\xf3\xd1\xf4\x76\xf8\xe5\xfa\xfc\x72\xfc\x78\x44\x84\x4a\x59\x96\x99\x3e\x33\x9a\x11\xa1\xdf\xd7\x2f\x3b\x4f\xa4\xaa\x00\x22\x94\x05\x5e\x1a\x08\xfe\x2f\x99\x94\x2e\x37\x58\xae\xf2\x6e\x2b\xed\xda\xc7\xdd\x46\xd1\x3a\x4b\x8e\xc1\xf1\xe3\x06\x8a\xe3\x31\x66\xf0\xb9\xfa\x1d\x3a\x75\x4e\x92\xf7\x27\xc1\x0f\x03\x12\x59\x46\x06\xef\x6c\xf7\x16\x3a\x9c\x69\x83\x05\xb8\x1c\x4a\x4b\xe8\xff\x06\xef\x4e\x5b\xc1\x12\xcd\x3d\x33\x19\xe9\xd7\x3b\xf1\xe5\x28\xd7\x7d\x8e\x6a\xd9\x2e\xe1\x8c\xe7\x40\x4e\x77\x3b\x90\x88\xba\x17\x6f\x26\x90\xb1\x6c\xc1\x24\x53\x7c\x87\x8f\x28\x34\x1a\x17\x87\xca\x4b\xeb\xb0\x38\xfe\x57\xdf\xf3\x81\x11\x59\xbd\xba\xde\xf0\xb3\xeb\x3d\x23\x81\x39\x48\x39\xa6\xb5\xdd\x15\xfa\x10\xb4\xc4\x4d\x01\x6f\xe3\xf1\xbd\x12\x3e\xb3\x29\xd3\xba\x59\x52\x2b\xee\x17\x76\x6d\x38\xf1\x99\x3a\x1c\xcf\x92\x9e\xd5\xc0\x69\xc5\x6e\x6b\xe1\xf7\xf7\x59\x58\x87\x66\x73\x25\x0a\xe1\x28\xf1\x48\x7a\x1a\x70\xb0\xda\xd4\x3e\xdc\x46\x03\x25\x53\x94\x52\xa8\xd5\x4d\x45\x28\x35\x01\x85\x7f\x68\x03\x68\xc1\x1e\x6e\x14\x5b\x33\x21\xd9\xc2\x57\xc5\xc0\x9b\x03\x09\xdc\xa1\xa9\xd7\x14\x9e\x20\xaf\x82\x18\xba\xa3\x70\x50\x68\xd9\x1a\x0e\x81\xaa\x4e\x32\xd2\x7f\x0a\x87\x6d\xa4\x75\x92\x09\x34\xc2\x6d\x2e\x24\xb3\x76\x5c\x43\x52\x43\x9a\xf2\x9a\x8e\x52\x6e\x84\x13\x9c\xc9\xa4\x51\xb1\x11\xe3\x8c\xf7\xce\xa7\x82\x06\x25\x98\x90\x94\xfd\x93\x92\x3b\xd8\x78\xc0\x1b\x73\xe7\x59\x86\xca\x7e\x51\x72\x93\x04\x25\x81\xda\x6b\xa2\xa1\x24\x19\x3d\x08\xeb\x6c\x72\x60\x40\x61\x06\xa9\xa7\xd8\x3d\x62\xe7\xa8\x9c\x41\x99\x6a\xc9\x14\xbc\xd0\x26\x21\xb0\x5c\x02\x77\x94\x24\x63\x9c\xf1\x1c\xb2\x52\xc2\xcb\x5d\x16\xcc\x23\xf4\x33\x7c\x79\x0f\xb3\x28\x21\x0e\x33\x16\x2d\x25\x52\xa8\xf2\xa1\x85\x59\xa3\xc4\xd5\x66\xa6\x3d\x63\x5e\xa0\xf2\x09\xea\x1b\x71\x08\x7a\xc1\x1e\x66\x77\x70\x5f\xa7\xdc\xf6\xd9\x6a\xfe\xdf\x47\x17\x3b\xf1\x14\xe7\x4b\x23\x58\x7d\x9f\x83\xba\x51\x96\x39\x61\x97\xa2\xce\xdf\x21\x8e\xd1\x6d\x63\x08\x96\x56\x09\x78\x18\xc7\x13\x09\xfe\x7c\x9a\x12\xe2\x4f\x94\x09\x05\xa6\xd5\x48\x0f\xf8\xa0\x7e\x44\xc1\x56\x40\xc9\xd1\xf7\xd9\xb7\xd9\x7c\x74\x7d\x3b\x1c\x7d\x3c\xbf\xb9\x9a\xdf\x4e\x47\x9f\x2e\x67\xf3\xe9\xb7\xc7\x23\xce\x7c\xd6\xda\x25\x1a\x97\x6f\x19\x8a\x0e\xfa\x83\x93\xfe\x20\xb6\x32\x29\xa5\x9c\xa0\x14\x7c\x43\xc9\xe5\x72\x8c\x6e\x62\xc0\x42\xd5\x5a\xeb\x27\x1a\x7f\xda\xc0\x3d\x4d\xec\x05\x56\x40\x81\x66\x43\xc9\xe0\xbf\x27\xd7\x22\xea\x05\xbf\x97\x60\xf7\x57\x73\x5d\x52\x32\x38\x39\x29\x3a\x6d\x44\x26\x98\x59\x59\x4a\x7e\x21\x49\xea\x49\x3f\xf9\x37\x49\x22\xde\xdd\x36\xdf\x84\xfc\xda\xaa\xac\x51\x96\x05\x5c\xfb\x8a\x8d\xd2\x63\x0b\xa7\xef\xf9\x69\xbd\x28\xf0\x5f\xf8\xf5\x13\xe6\x72\x1a\x31\x7b\x14\x0b\xcb\x7c\x0d\x53\xe2\x47\xa9\x43\xc3\x55\x0b\x48\x5f\x69\xbf\xe9\x1c\x3f\x76\xe3\x7b\x4e\x14\x4e\x9b\x31\x13\x34\x8e\x92\xa0\x69\x6e\x3b\x49\xbc\x7d\x6d\xd0\x21\x47\x49\xc9\xcd\x70\xf2\x5a\x3b\xa9\xe3\xba\xd3\xd6\xfc\xe2\x19\x5b\x51\x2b\xdf\x5a\x2b\xc0\x19\xc1\xbb\x77\x16\x5a\xab\xa6\x18\x4f\xd7\xa8\x1c\x3c\xb8\x30\x83\x98\x94\x78\x3f\x31\x62\x2d\x24\xac\x60\x64\x39\x93\x15\x05\x53\x3f\x66\xd8\x10\x75\xce\x34\x5b\x08\x29\x9c\x80\xbd\x1c\x64\x59\x16\xff\x48\xc9\x78\x34\xbf\xfd\x70\x39\x1e\xde\xce\x46\xd3\xaf\x97\x17\xa3\x48\x9c\x19\xd4\xfb\x0a\x4c\xca\x8e\x83\x9b\x22\xba\x8f\x42\x42\x33\xcf\xc6\xc7\x28\xc5\x1a\x14\x58\x3b\x31\xb8\x80\xd0\x5e\xee\x9c\xfe\x04\x2e\x76\xa1\xeb\x7c\xd9\x1b\x1a\x49\x93\x0e\x94\x9c\x9d\x9c\x9d\x44\xbf\x2d\xcf\xc1\x83\xfc\x79\x3e\x9f\x04\x02\xa1\x84\x13\x4c\x0e\x41\xb2\xcd\x0c\x38\xaa\xcc\xd2\x78\x68\xd3\x60\x04\x66\xad\x6c\x10\xca\x9c\x28\x00\x4b\xb7\x13\x06\x32\x5b\x72\x0e\xd6\xce\x73\x03\x36\x47\x99\xc5\xd2\x25\x13\xb2\x34\x10\x48\x4f\xa3\xd1\x57\xbc\x1a\x8a\x78\x60\x0e\x90\x18\x9c\x0d\xde\x8c\xc4\x33\x40\xfc\xe7\x1f\xc6\x21\x53\x76\xcb\xc0\xc3\xfa\xaa\xd5\x08\x6a\x02\x79\x05\x81\xf1\xed\x65\x26\xc6\xad\xbb\x89\x54\x50\x38\x28\xec\x7e\x4a\x57\x43\xc0\x96\x55\xf7\x7a\x57\x7d\x04\x9d\xc2\x46\xb1\xbd\x21\x74\x6a\x1e\x4a\x5f\xc8\x9d\x2f\x09\x2d\x3d\x20\x52\x3f\xa1\x78\x56\x60\xb2\xa9\xc1\x27\xef\x81\xcd\xc5\xb2\x63\x18\x0f\xba\xf4\x93\xd3\xf8\xc1\xbd\x7c\x77\x9b\xf1\x53\x46\x9d\x9f\x89\xe7\xc2\xa4\x43\x6c\xb9\x61\xfa\xc9\xfb\xf9\x0b\x86\xfb\xed\xec\xda\xcc\xaa\x81\xa5\x97\x5e\x03\xe2\xe9\xbc\xcb\x67\xe3\xe3\x72\x42\xc3\x8b\xe9\x78\xf6\x78\xd4\x0b\x3a\x53\xba\xd7\x77\x74\xd8\x50\xf6\xdb\x4f\xda\xd1\x5c\x9e\x50\xa8\xbb\x42\xda\xd1\x3f\x74\xdc\x66\x62\x95\xbf\x02\x00\x00\xff\xff\xda\x3e\x58\xf1\x47\x13\x00\x00")

func corednsYamlBytes() ([]byte, error) {
	return bindataRead(
		_corednsYaml,
		"coredns.yaml",
	)
}

func corednsYaml() (*asset, error) {
	bytes, err := corednsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coredns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localStorageYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x5b\x6f\xdb\x36\x14\x7e\xd7\xaf\x38\xd3\x9a\x87\x0d\xa5\x9d\x60\xc5\x32\xb0\xd8\x83\x9b\x38\x69\x80\xf8\x02\xdb\xdd\x50\x14\x85\x41\x53\xc7\x36\x1b\x8a\x24\x48\xca\xad\x9b\xe5\xbf\x0f\x14\x65\x47\x72\x9c\xc4\xc1\xb6\xb7\xe9\x45\xe0\xe1\xf9\xce\xfd\x42\x66\xc4\x1f\x68\x9d\xd0\x8a\xc2\xea\x24\xb9\x11\x2a\xa3\x30\x46\xbb\x12\x1c\x3b\x9c\xeb\x42\xf9\x24\x47\xcf\x32\xe6\x19\x4d\x00\x14\xcb\x91\x82\xd4\x9c\x49\x62\x98\x5f\x12\x63\xf5\x4a\x04\x3c\x5a\xe2\x22\x8e\xb0\x0a\x18\xd9\x9d\x61\x1c\x29\xdc\x14\x33\x24\x6e\xed\x3c\xe6\x09\x21\x24\xa9\x6b\xb6\x33\xc6\x5b\xac\xf0\x4b\x6d\xc5\x77\xe6\x85\x56\xad\x9b\xdf\x5c\x4b\xe8\xf6\xd6\xa6\x33\x59\x38\x8f\x76\xa4\x25\x1e\x6e\x90\x0d\xdc\xb6\x90\xe8\x68\x42\x80\x19\x71\x69\x75\x61\x1c\x85\x4f\x69\xfa\x39\x01\xb0\xe8\x74\x61\x39\x96\x14\xa5\x33\x74\xe9\x6b\x48\x4d\x30\xcb\x79\x54\x7e\xa5\x65\x91\x23\x97\x4c\xe4\xe5\x0d\xd7\x6a\x2e\x16\x39\x33\xae\x84\xaf\xd0\xce\x4a\xe8\x02\x7d\xb8\x96\xc2\x95\xff\xaf\xcc\xf3\x65\xfa\xf9\x79\x95\xa8\x32\xa3\x85\xf2\x7b\xd5\x46\xa2\xce\x76\x74\xfd\x7c\x90\xe0\x15\x06\xa9\x0d\x20\xb7\xc8\x3c\x96\x42\xf7\xdb\xe7\xbc\xb6\x6c\x81\x55\xe8\x1f\x0a\xad\xee\xb9\x64\xce\xe1\x81\x11\xf8\x47\x89\x7e\x27\x54\x26\xd4\xe2\xf0\x7c\xcf\x84\xca\x92\x90\xf4\x11\xce\x03\xf3\xc6\xbd\x27\x14\x27\x00\x0f\x0b\xec\x90\xb2\x72\xc5\xec\x0b\x72\x5f\x56\xd6\xde\xb6\xf9\xaf\x9a\x85\x19\xe3\xee\xc3\x75\x8e\x46\xea\x75\x8e\x2f\xe8\xd3\xc7\x55\x39\x83\x9c\x96\x69\x8f\xbc\xef\x45\xc8\xf9\xfa\x5a\xe4\xc2\x53\x38\x4e\x00\x9c\xb7\xcc\xe3\x62\x1d\xb8\x00\xfc\xda\x20\x85\x91\x96\x52\xa8\xc5\x07\x93\x31\x8f\x25\xdd\xd6\x29\x91\x15\x20\x67\xdf\x3e\x28\xb6\x62\x42\xb2\x99\x44\x0a\x27\x41\x1c\x4a\xe4\x5e\xdb\xc8\x93\x87\xaa\xb9\x66\x33\x94\x6e\x03\x62\xc6\x3c\xe1\x86\xc7\xdc\xc8\xad\x8a\xba\xff\xe1\x93\x0d\x49\xcf\xc9\x02\xd8\x78\x1f\x3e\x63\x85\xb6\xc2\xaf\xcf\x42\xb1\xf7\xcb\x60\xa6\x31\x48\x24\xcc\x09\xc2\xad\xf0\x82\x33\x99\x56\xfc\xae\x91\xfb\xfe\xcb\x12\x5f\x86\x52\x4b\xb4\x65\x61\xd6\x2c\x06\x20\x70\x83\x6b\x0a\xe9\x59\xa5\xaf\x93\x65\x5a\xb9\x81\x92\xeb\xb4\xc6\x05\xa0\x4d\x40\x6b\x4b\x21\xed\x7e\x13\xce\xbb\x74\x8f\x90\xd2\xf2\x50\xbc\xad\x90\x74\xab\xd0\x63\xd9\x7b\x5c\x2b\x6f\xb5\x24\x46\x32\x85\x2f\x90\x0b\x80\xf3\x39\x72\x4f\x21\xed\xeb\x31\x5f\x62\x56\x48\x7c\x89\xe2\x9c\x85\x96\xfb\xb7\x34\x06\x37\x98\x50\x68\xb7\x11\x24\xcf\xf5\x41\xfc\x44\xce\x16\x48\xe1\xe8\x76\xfc\x71\x3c\xe9\xf6\xa6\xe7\xdd\x8b\xce\x87\xeb\xc9\x74\xd4\xbd\xbc\x1a\x4f\x46\x1f\xef\x8e\x38\x0b\x39\x73\x73\x6d\xfd\xb2\xbd\x5f\x1a\x8d\xce\x90\x25\xb2\xac\x29\x79\x58\x48\x39\xd4\x52\xf0\x35\x85\xab\x79\x5f\xfb\xa1\x45\x87\xdb\xcc\x07\xc3\xf3\x9c\xa9\xec\x3e\xef\xe4\x39\x8b\x09\x38\xcf\xac\xaf\x9d\x09\x89\xcb\xa9\x46\x6a\xa3\xe7\xed\x48\xad\x7e\xad\x2f\x4e\xab\x2d\x47\x5c\x33\xbd\x50\x84\xae\xae\x3b\xc6\x2c\x22\x48\x64\xaa\xa5\x20\x0f\xfc\x43\xe6\x97\xb4\xa1\x60\xcb\x81\x6a\xf5\x50\xd8\x70\x70\x3e\xed\x77\x7a\xdd\xf1\xb0\x73\xd6\xad\x09\x5b\x31\x59\xe0\x85\xd5\x39\x6d\x24\x79\x2e\x50\x66\xd5\x0c\x7f\x40\x8f\xba\x37\xcd\xde\xda\x8e\xb2\xa4\xee\xd5\x0b\x1c\x8a\xf4\x1e\x33\x4d\x6d\x0f\x2a\xa7\x8a\xef\xee\x38\x6e\x6e\xcd\xfb\xc1\x3c\x8e\xf4\x72\x80\x3c\x39\x9a\xc3\x9e\x52\x4a\xfb\x7a\xf3\xd7\x57\xed\x4e\xcf\x08\x47\x32\x9c\xb3\x42\x7a\x52\x5e\x53\x48\xbd\x2d\x30\x4d\xea\xb5\x08\x96\x29\xbe\x44\x1b\x00\x35\x4d\xd1\xf7\x6a\xad\xf6\x74\x86\x14\xfe\x64\xc2\x5f\x68\x7b\x21\xac\xf3\x67\x5a\xb9\x22\x47\x9b\xd8\xf8\xe6\xd9\x14\xed\x39\x4a\xf4\x58\x7a\x5e\xed\xca\x4d\xc8\x92\x9d\xf7\xe3\x93\x2b\x68\x5b\xa0\x8f\x6c\x9f\x0d\xb0\x56\xab\x14\xfe\x22\x65\x40\x6e\xab\xdc\x94\xa3\x24\x54\x40\x8f\x99\x94\x7e\xaa\xa8\xb7\xdb\xcc\x95\xf7\x29\x4d\x37\x2d\x3c\xec\x4c\xde\x4f\x2f\x06\xa3\x69\x7f\xd0\x9f\x5e\x5f\x8d\x27\xdd\xf3\x69\x7f\x70\xde\x1d\xa7\xaf\xef\x31\xc1\x3a\x97\xd2\x4f\xe9\xd1\xed\x06\x77\x3d\x38\xeb\x5c\x4f\xc7\x93\xc1\xa8\x73\xd9\x2d\xa5\xdc\x1d\x95\x2f\x9e\xf0\xdd\x55\xff\x78\xbe\x2b\xf7\x98\x0f\xaf\x8c\xca\xd8\x1f\x7f\x68\xcf\x84\x6a\xbb\x65\x79\xfa\xba\x14\x12\x61\x81\x5e\x1b\xef\x20\xcd\xa9\xa3\x86\xa6\xa0\x4d\x6c\xdf\x4c\xdf\xcf\x01\xe6\x10\x5e\x69\xe3\x41\xa8\x46\x2d\x9a\x9f\x1a\x47\x36\x73\x5a\x16\xbe\x8c\xc3\xef\xaf\x06\xc3\x49\x67\x74\xd9\x60\x78\xfb\xb6\x71\x74\x4d\xb8\x13\xdf\xf1\x4a\xbd\x5b\x7b\x74\x87\xa0\xf3\x26\x7a\xa5\x65\xa8\x9c\xe7\x90\xe8\x18\xaf\xfc\x53\xb1\xdb\xf2\x9b\x4c\x58\x20\x39\x1c\x9f\x9e\x9e\x02\x31\xf0\xea\xb6\xee\x48\x0c\x2a\x5f\xe6\x3a\x83\xd3\xe3\xe3\xdd\xdb\x76\xab\x55\x2e\x7c\x66\x33\xfd\x55\xfd\x1f\xea\x27\x43\x6d\x73\x20\x76\xbe\x27\xc0\x4b\x94\x06\xed\x50\x67\xad\x35\xcb\xe5\x36\x8a\x3b\x5d\x1c\x48\xb1\xd1\x87\x3a\xdb\xfb\xb4\x8a\xbd\x1d\xa5\x11\x53\x31\xd5\xdf\x4f\x8f\xef\xe2\x1d\x10\x1c\xb4\x7f\xad\x70\x7c\xf5\xeb\x9b\xf6\xac\x70\xeb\x99\xfe\x46\x4f\x5a\xbf\xbc\x69\x9d\x1c\xb8\x66\xff\x0e\x00\x00\xff\xff\x63\x29\xfa\xd1\xe4\x0e\x00\x00")

func localStorageYamlBytes() ([]byte, error) {
	return bindataRead(
		_localStorageYaml,
		"local-storage.yaml",
	)
}

func localStorageYaml() (*asset, error) {
	bytes, err := localStorageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "local-storage.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAggregatedMetricsReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x31\x6b\xf4\x30\x0c\xc6\xf1\xdd\x9f\x42\x78\x7e\x93\x97\x6e\xc5\x6b\x87\xee\x1d\xba\x94\x1b\x94\xf8\x21\x27\xce\xb1\x83\x24\xe7\x68\x3f\x7d\xb9\x70\xdc\x58\x68\x27\x0d\x7f\x7e\x0f\xe8\x22\x35\x27\x7a\x29\xdd\x1c\xfa\xd6\x0a\x02\x6f\xf2\x0e\x35\x69\x35\x91\x4e\x3c\x8f\xdc\xfd\xdc\x54\xbe\xd8\xa5\xd5\xf1\xf2\x6c\xa3\xb4\xff\xfb\x53\x58\xe1\x9c\xd9\x39\x05\xa2\xca\x2b\x12\xd9\xa7\x39\xd6\xc4\xcb\xa2\x58\xd8\x91\x87\x15\xae\x32\xdb\xa0\xe0\x0c\x0d\x44\x85\x27\x14\xbb\x11\xfa\x61\xfd\xb1\x30\x78\x1b\x76\xc1\x35\x51\x74\xed\x88\xbf\x71\xc8\xe2\x7f\x71\x9c\x57\xa9\x0f\xa8\xbd\xc0\x52\x18\x88\x37\x79\xd5\xd6\x37\x4b\xf4\x11\xef\x7f\xdd\x7d\x3c\x05\x22\x85\xb5\xae\x33\x8e\xbe\xb5\x6c\xf1\x1f\xc5\xda\x32\xec\xc8\x3b\x74\x3a\xd2\x02\xbf\x95\x22\x76\xdc\x2b\xfb\x7c\x8e\xa7\xf0\x1d\x00\x00\xff\xff\xe5\x1d\x7a\x17\x89\x01\x00\x00")

func metricsServerAggregatedMetricsReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAggregatedMetricsReaderYaml,
		"metrics-server/aggregated-metrics-reader.yaml",
	)
}

func metricsServerAggregatedMetricsReaderYaml() (*asset, error) {
	bytes, err := metricsServerAggregatedMetricsReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/aggregated-metrics-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthDelegatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\x4e\xc4\x40\x0c\x45\xfb\x39\xc5\x5c\x60\x82\xe8\x90\x3b\xa0\xa0\x5f\x24\x7a\x67\xf2\x59\x4c\x92\x71\x64\x7b\x22\xc1\xe9\xd1\x8a\x88\x06\xd8\xf6\x4b\xff\xbd\x57\x4a\x49\xbc\xc9\x0b\xcc\x45\x1b\x65\x1b\xb9\x0e\xdc\xe3\x4d\x4d\x3e\x39\x44\xdb\x30\xdf\xf9\x20\x7a\xb3\xdf\xa6\x59\xda\x44\xf9\x71\xe9\x1e\xb0\x93\x2e\x78\x90\x36\x49\x3b\xa7\x15\xc1\x13\x07\x53\xca\xb9\xf1\x0a\xca\x2b\xc2\xa4\x7a\x71\xd8\x0e\x23\xff\xf0\xc0\x4a\x17\x70\x99\xb0\xe0\xcc\xa1\x96\x4c\x17\x9c\xf0\x7a\x79\xf1\x26\x4f\xa6\x7d\xbb\x52\x90\x72\xfe\x15\xf0\xe3\xfb\x5b\xe0\x7d\x7c\x47\x0d\xa7\x54\x8e\xef\x33\x6c\x97\x8a\xfb\x5a\xb5\xb7\xf8\x27\xf7\x98\x7d\xe3\x0a\xca\x73\x1f\x51\xbe\xf9\xe9\x2b\x00\x00\xff\xff\xa5\xb5\x26\x22\x2f\x01\x00\x00")

func metricsServerAuthDelegatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthDelegatorYaml,
		"metrics-server/auth-delegator.yaml",
	)
}

func metricsServerAuthDelegatorYaml() (*asset, error) {
	bytes, err := metricsServerAuthDelegatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-delegator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x3d\x4e\x04\x31\x0c\x46\xfb\x9c\x22\x17\xf0\x22\x3a\x94\x0e\x1a\xfa\x45\xa2\xf7\x64\x3e\xc0\xcc\x8e\x13\xd9\xce\x08\x38\x3d\x1a\xb4\xfc\x34\x4b\x6f\xbf\xef\x3d\x22\x4a\xdc\xe5\x11\xe6\xd2\xb4\x64\x9b\xb8\x1e\x78\xc4\x4b\x33\xf9\xe0\x90\xa6\x87\xe5\xc6\x0f\xd2\xae\xb6\xeb\xb4\x88\xce\x25\x1f\xdb\x09\x77\xa2\xb3\xe8\x73\x5a\x11\x3c\x73\x70\x49\x39\x2b\xaf\x28\x79\x45\x98\x54\x27\x87\x6d\x30\xda\x51\x64\xe0\x19\x76\x3e\xf1\xce\x15\x25\x2f\x63\x02\xf9\xbb\x07\xd6\x64\xed\x84\x23\x9e\x76\x08\x77\xb9\xb7\x36\xfa\x3f\x26\x29\xe7\x5f\x91\x9f\x5d\xbc\x05\x74\x6f\x20\xee\xf2\x67\x1c\x1a\x52\xbf\xde\xbf\x35\x7c\x4c\xaf\xa8\xe1\x25\xd1\x19\xf4\x00\xdb\xa4\xe2\xb6\xd6\x36\x34\x2e\xa4\x5c\xd6\xff\x0c\x00\x00\xff\xff\x2a\x39\xe6\xe4\x44\x01\x00\x00")

func metricsServerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthReaderYaml,
		"metrics-server/auth-reader.yaml",
	)
}

func metricsServerAuthReaderYaml() (*asset, error) {
	bytes, err := metricsServerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsApiserviceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\x4d\x6a\xc4\x30\x0c\x85\xf7\x3e\x85\x2e\xe0\x74\xb2\x2b\xde\x75\x59\x68\x61\x20\x65\xf6\x1a\x8f\x3a\x88\xe0\x1f\x24\xd9\x90\xdb\x97\x30\x71\xba\x13\x7a\xef\xfb\x24\xef\xbd\xc3\xca\x37\x12\xe5\x92\x03\x60\x65\xa1\x27\xab\x09\x1a\x97\x3c\xad\xef\x3a\x71\x79\xeb\xb3\x5b\x39\x3f\x02\x7c\x5c\x3f\x17\x92\xce\x91\x5c\x22\xc3\x07\x1a\x06\x07\x90\x31\x51\x80\x3e\xdf\xc9\x70\x9e\x12\x99\x70\xd4\x03\x76\x5a\x29\xee\x25\x7d\x81\xfb\x38\x88\xa3\xe9\xf7\x88\xe4\x0c\xb4\x62\xa4\x00\x6b\xbb\x93\xd7\x4d\x8d\x92\x03\x78\x4a\x69\xf5\x44\x86\x1c\xa0\x8f\xdf\x8f\xf3\x0e\x80\xb3\x52\x6c\x42\xcb\xca\xf5\xe7\x6b\xb9\x91\xf0\xef\x16\xc0\xa4\xd1\x10\x5d\x85\x8b\xb0\x6d\xdf\x9c\x39\xb5\x14\x60\xbe\x5c\xfe\x65\x23\x7d\xad\xff\x02\x00\x00\xff\xff\x14\x74\xa9\x1b\x25\x01\x00\x00")

func metricsServerMetricsApiserviceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsApiserviceYaml,
		"metrics-server/metrics-apiservice.yaml",
	)
}

func metricsServerMetricsApiserviceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsApiserviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-apiservice.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x6e\xdb\x46\x10\xbd\xeb\x2b\x06\x2a\x7c\x2b\x6d\x49\xa9\xdd\x80\x80\x0f\x82\xc4\x44\x01\x6c\x47\x10\xe5\x16\x3e\x09\xeb\xe5\xc8\x5a\x78\xb9\xbb\x9d\x19\x2a\x61\x83\xfc\x7b\xb1\xa2\x43\x93\x8e\x1d\xb8\x68\xc3\x03\x0f\x33\x6f\xde\x3c\xbe\x9d\xe5\x24\x49\x32\x50\xc1\xfc\x81\xc4\xc6\xbb\x14\xf6\xe3\xc1\xbd\x71\x45\x0a\x39\xd2\xde\x68\x9c\x6a\xed\x2b\x27\x83\x12\x45\x15\x4a\x54\x3a\x00\x70\xaa\xc4\x14\x4a\x14\x32\x9a\x13\x46\xda\x23\x3d\x84\x39\x28\x8d\x29\xdc\x57\xb7\x98\x70\xcd\x82\xe5\xe0\x69\x07\x15\x02\x9f\xb4\x6d\xe6\x18\xac\xaf\x4b\xfc\x4f\x2d\x00\xac\xba\x45\xcb\xb1\x12\xe0\xfe\x2d\x27\x2a\x84\xef\xca\x39\xa0\x8e\x08\xc2\xbd\x89\x52\x16\x86\xc5\x53\x7d\x61\x4a\x23\x29\x8c\x06\x00\x2c\xa4\x04\xef\xea\x86\x47\xea\x80\x29\xac\xbc\xb5\xc6\xdd\x5d\x87\x42\x09\x1e\xe2\xd4\x8d\x34\x50\x80\x52\x7d\xbe\x76\x6a\xaf\x8c\x55\xb7\x16\x53\x18\x47\x3a\xb4\xa8\xc5\x53\x83\x29\x95\xe8\xdd\x45\x47\xe7\xcb\x4a\x01\x04\xcb\x60\x5b\xfa\xae\x33\xf1\x79\xc1\x9d\xf8\xd8\x5e\x83\x1f\xb5\x00\xf8\x66\x48\x7c\x02\x19\x4f\x46\xea\x99\x55\xcc\x57\x07\xfe\x61\xe3\x6e\xe2\x7c\x81\x89\x26\x23\x46\x2b\x3b\x7c\xc0\x73\x6f\x3c\xae\x5e\x16\x24\xde\x22\x29\x31\xde\x75\x54\x25\x70\x8f\x75\x0a\xc3\xd9\x03\xeb\xb4\x28\xbc\xe3\x8f\xce\xd6\xc3\x16\x03\xe0\x43\xac\xf4\x94\xc2\x30\xfb\x6c\x58\x78\xf8\x1d\xc1\x41\x1b\x79\x8b\xc7\x71\x1e\xc8\xa1\x20\x1f\x1b\x7f\xa2\xbd\x13\xf2\x36\x09\x56\x39\x7c\x25\x27\x00\x6e\xb7\xa8\x25\x85\xe1\x95\xcf\xf5\x0e\x8b\xca\xe2\xeb\x5b\x96\x8a\x05\xe9\xff\xe8\xb5\xf7\xb6\x2a\xb1\xb5\xeb\x17\x28\xa3\xc7\x60\x1c\x48\x19\x80\x3d\x7c\x42\xd0\xca\x01\xab\x2d\xda\x1a\x2a\x46\xd8\x92\x2f\x13\xd6\x14\x67\x0c\x4c\xa9\xee\x90\x41\xb9\xe2\xc4\x13\x10\xaa\x22\xf1\xce\xd6\x10\x4d\x51\xc6\x21\xf1\xe0\xdb\x27\x35\x93\x24\x65\x48\x0a\x43\xad\x3a\x2c\x83\xd4\x73\x43\x29\x7c\xf9\xfa\x10\x7c\xac\x4d\x9f\x14\x3f\x7b\xea\xd0\x88\x48\xe1\xe8\x4b\x7e\x93\xaf\xb3\xcb\xcd\x3c\x7b\x37\xbd\xbe\x58\x6f\x56\xd9\xfb\x0f\xf9\x7a\x75\xf3\xf5\x48\xab\x38\x42\xbc\xf5\x24\xbb\x93\x3e\x4b\xba\x1f\x1d\x9f\x1d\xbf\x69\xc9\x14\xdd\xf5\xa6\x27\x49\x34\x92\x44\xcd\xe7\x27\x52\x86\x5e\x86\x51\x57\x84\x49\xf0\x24\xe7\xe3\xd1\xe4\x74\xd4\xcb\xc6\x33\xb3\x28\x49\x20\xdc\x22\x11\x16\x89\x2a\x0a\x42\xe6\x24\x5e\x77\x3e\x3f\xfa\xb2\x5c\x65\xef\xb2\xd5\x2a\x9b\x6f\xa6\xf3\xf9\x2a\xcb\xf3\xcd\xfa\x66\x99\xe5\x5f\x8f\x9e\xe5\xa9\x18\x9b\x0b\xc2\xa2\xa4\xe2\x43\xdb\x1e\xb0\xf9\xb0\x84\x90\xbd\xad\xe2\x35\x38\x1f\x9f\x72\x0f\x21\x96\x13\x6d\xc2\x0e\x29\xe1\xca\x08\xf2\xf9\xfa\x22\xdf\x64\xb3\xf9\x22\x8b\xef\x7c\xba\xf9\xf3\xc3\x7a\xb1\x99\x66\xf9\x66\x72\x7a\xb6\x79\x3f\xbb\xdc\xe4\x8b\xe9\x9b\xb7\xbf\xfd\xfa\x88\x5b\xbd\x0a\xf5\x84\x6d\x3c\x79\xfb\x0d\x37\x39\x3d\x7b\x89\xed\x45\x54\x87\x6d\xb6\x98\xce\x16\xd3\xc9\x68\xb3\xfc\x78\x71\x33\x7e\x33\x3a\x7d\x8e\xec\x3b\x50\xeb\x42\x34\xa7\x22\x8d\x9d\x33\x8e\xc1\xbf\x2a\x64\xe9\xc5\x00\x74\xa8\x52\x18\x8f\x46\x65\x2f\x5a\x62\xe9\xa9\x4e\xe1\xf7\xd1\xa5\x69\x13\xf1\x28\x7a\x53\xd3\xcc\xeb\x4e\x24\x70\xa7\xba\x9d\xec\xa5\x27\x89\xdc\xdd\x91\x89\x3f\x46\x2f\x5e\x7b\x9b\xc2\x7a\xb6\xec\x28\x56\x85\x71\xc8\xbc\x24\x7f\x8b\x5d\x89\x91\xfe\x3d\x4a\x5f\x75\x50\xb2\x4b\xe1\x24\x56\xd5\x7f\xf7\x33\x87\xa6\x4f\x35\x01\xb0\xde\x61\x54\xbb\x58\xaf\x97\x79\x27\x63\x9c\x11\xa3\xec\x1c\xad\xaa\x73\xd4\xde\x15\xdc\xec\xae\x96\x10\xc9\xf8\xa2\x4d\x4d\x3a\x29\x31\x25\xfa\x4a\xda\xdc\xb8\x93\xe3\x4a\x6b\x64\x5e\xef\x08\x79\xe7\x6d\xd1\xcf\x6e\x95\xb1\x15\x61\x27\xfb\x78\x37\xad\xd9\xe3\xbf\x76\x22\x16\xfd\x04\x23\xce\x7e\xe0\xc4\x78\xf4\xd3\xad\x38\xfc\x7a\xe2\x12\xf5\x4e\xf0\xb3\xf4\xa7\x59\x15\x71\xbf\xad\xbc\x97\x77\xc6\x62\xb3\x5b\x53\x10\xaa\xb0\x0b\xab\xdc\x94\xaf\xbc\x8b\xb0\xe7\x93\xd7\x8c\x74\xb8\x01\xdd\xcf\x51\xd6\xfa\x4f\x4b\x32\x7b\x63\xf1\x0e\x33\xd6\xca\x1e\x56\x6e\x0a\x5b\x65\xf9\x91\xa3\xd9\x2c\x97\x71\x9d\x3c\x73\x33\x9e\xae\x01\x68\x16\xcf\xb2\x39\xb2\xf8\x9f\xfd\x27\x00\x00\xff\xff\x22\x74\xa5\xc7\x2e\x0a\x00\x00")

func metricsServerMetricsServerDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerDeploymentYaml,
		"metrics-server/metrics-server-deployment.yaml",
	)
}

func metricsServerMetricsServerDeploymentYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3f\x4b\x04\x31\x10\xc5\xfb\x7c\x8a\x61\xfb\x28\xe2\x15\x92\xd6\x5a\x38\x50\xec\xe7\x72\x0f\x0d\x97\x4d\xc2\xcc\xec\x82\xdf\x5e\x76\xf6\x9a\x83\xed\x92\x37\xef\xcf\x2f\xc6\x18\x78\x94\x6f\x88\x96\xde\x12\xad\x2f\xe1\x56\xda\x35\xd1\x27\x64\x2d\x19\x61\x86\xf1\x95\x8d\x53\x20\x6a\x3c\x23\xd1\x0c\x93\x92\x35\x2a\x64\x85\xdc\x65\x1d\x9c\x91\xe8\xb6\x5c\x10\xf5\x4f\x0d\x73\x20\xaa\x7c\x41\xd5\x2d\x49\x7e\x91\x06\x83\x3e\x95\xfe\xbc\x37\x4d\x1f\x0f\x55\xd3\x81\x31\xd7\x45\x0d\xe2\x8e\xb2\x2d\x4c\x26\x0b\xa6\xa0\x03\x79\x2b\x56\x54\x64\xeb\x72\x1f\x79\xd3\xc8\x63\x1c\x30\x8e\x2e\xe6\x24\xd1\x9f\x89\x4e\xa7\x57\x8f\xec\x24\xbf\x66\x43\xfd\x3f\xa4\x5b\xcf\xbd\x26\xfa\x7a\x3f\xbb\x62\x2c\x3f\xb0\xb3\xa7\x76\xdf\x7f\x00\x00\x00\xff\xff\x7e\x3b\x1f\x83\x35\x01\x00\x00")

func metricsServerMetricsServerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerServiceYaml,
		"metrics-server/metrics-server-service.yaml",
	)
}

func metricsServerMetricsServerServiceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerResourceReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\xc3\xde\xd3\xc5\x9b\xe4\xa6\x1e\xbc\xaf\xe0\x3d\x4d\x9f\xbb\x63\xdb\xa4\xcc\x4c\x2a\xfa\xeb\xa5\xb6\x2a\xb8\xb0\x2c\x78\x4a\x98\xe4\x7d\x8f\xf9\xbc\xf7\x2e\x4e\xfc\x0c\x51\x2e\x39\x90\xb4\x31\x35\xb1\xda\xa9\x08\x7f\x44\xe3\x92\x9b\xfe\x56\x1b\x2e\xfb\xf9\xc6\xf5\x9c\xbb\x40\x0f\x43\x55\x83\x1c\xca\x00\x37\xc2\x62\x17\x2d\x06\x47\x94\xe3\x88\x40\xfa\xae\x86\x31\x8c\x30\xe1\xa4\x5e\x21\x33\xc4\x49\x1d\xa0\xc1\x79\x8a\x13\x3f\x4a\xa9\x93\x2e\x09\x4f\xbb\x9d\x23\x12\x68\xa9\x92\xb0\xcd\x72\xe9\xa0\xfb\x0d\xe0\x88\x66\x48\xbb\x3d\x1d\x61\xd7\x31\xa6\xd2\xe9\x2f\xec\x1c\xb2\x9c\x03\xeb\x7a\x79\x8b\x96\x4e\xee\x7f\x26\xee\x39\x77\x9c\x8f\xd7\x0b\x29\x03\x0e\x78\x59\xbe\x7d\xaf\x73\xa1\xd2\x11\x9d\xbb\xbf\x5c\xa0\xb5\x7d\x45\xb2\x2f\xe9\x6b\xf6\x09\x32\x73\xc2\x5d\x4a\xa5\x66\xfb\x89\xff\xc9\xad\x63\x9d\x62\x42\xa0\xbe\xb6\xf0\x2b\xdf\x7d\x06\x00\x00\xff\xff\xdb\x55\x9e\x61\x2a\x02\x00\x00")

func metricsServerResourceReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerResourceReaderYaml,
		"metrics-server/resource-reader.yaml",
	)
}

func metricsServerResourceReaderYaml() (*asset, error) {
	bytes, err := metricsServerResourceReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/resource-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x21\xbb\x72\x38\xdc\x72\xf0\xd8\x0e\xdd\x03\xb4\xbb\x2c\xb1\x09\x6b\x59\x14\x48\x39\x41\xfb\xeb\x0b\xc7\x4e\xd2\xc4\x76\xe0\xb4\xe9\x66\x0b\xe2\xfb\x48\xbe\x07\xd9\x84\x2f\xc0\x82\x14\x0b\xcd\xa5\x75\x4b\xdb\xe4\x0d\x31\x7e\xd8\x8c\x14\x97\xd5\x7f\x59\x22\xfd\xd9\xfe\x55\x15\x46\x5f\xe8\xc7\xd0\x48\x06\x5e\x51\x80\x07\x8c\x1e\xe3\x5a\xd5\x90\xad\xb7\xd9\x16\x4a\xeb\x68\x6b\x28\x74\xd5\x94\x60\x6c\x42\x01\xde\x02\x9b\xf6\x37\x40\x36\xd6\xd7\x18\x15\x53\x80\x15\xbc\xb6\xb7\x6d\xc2\x27\xa6\x26\x5d\x21\x2b\xad\x07\xe0\x23\x47\xde\x25\x43\x5d\x1c\xf5\x13\xf6\x0c\x69\xca\x37\x70\x59\x0a\x65\x6e\x82\x3c\x0b\xf0\xc4\x14\x4a\x19\x63\xd4\xf7\xb7\x35\xb2\xa6\x43\xfb\xff\xc4\x38\x8a\x99\x29\x04\x60\xc5\x4d\x80\xb3\xc6\xa5\xad\x30\x7a\xb1\x50\x5a\x33\x08\x35\xec\xa0\x3f\x8b\xe4\x41\x94\xd6\x5b\xe0\xb2\x3f\x5a\x43\x9e\x59\x6b\x6b\x90\x64\xdd\xa5\x40\x40\xc9\xfb\x8f\x9d\xcd\x6e\x33\xa2\x15\x21\xef\x88\x2b\x8c\xeb\x7e\xde\x31\xf1\xee\x4e\xa2\x80\x0e\xf7\x04\xa3\x5d\xb7\x0c\x87\x9e\x6f\x45\x8e\x10\x20\xfa\x44\x18\x73\xa7\x9d\xc8\x4f\x69\xb6\x0b\x39\x69\xff\xd0\xc5\xe9\xcc\x4f\x98\x79\xff\xb0\x9f\x03\x4e\x49\x6f\x67\x9c\xc7\xb8\x48\xfb\x75\xc0\xfd\x63\xff\x35\x07\xa6\x4d\xf0\x64\xe4\x07\x49\x1b\xc6\x60\x76\xa8\x7e\xcd\xf8\x91\x71\xee\x67\xfa\x50\xfc\xdc\xf0\xae\x72\x8f\x18\x3a\x79\x78\x1d\xe6\xb5\xf1\x19\x00\x00\xff\xff\x20\xa2\xda\xb0\x09\x06\x00\x00")

func rolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingsYaml,
		"rolebindings.yaml",
	)
}

func rolebindingsYaml() (*asset, error) {
	bytes, err := rolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rolebindings.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _traefikYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x5f\x6b\x1b\x3b\x10\xc5\xdf\xf7\x53\x0c\x0b\x7e\xba\x68\xbd\x76\xe0\xde\xa0\x37\x5f\x67\xd3\x9a\xb6\x69\xf0\x3a\x2d\x79\x32\xb2\x76\xec\x55\xad\x95\x84\x66\xd6\xd4\x4d\xf3\xdd\x8b\x6c\xe7\x1f\x14\x5a\x4a\xfa\x26\x34\x33\x67\xe6\xfc\x8e\x10\x22\x53\xc1\x7c\xc2\x48\xc6\x3b\x09\x2d\xda\xae\xd0\x8a\xd9\x62\x61\xfc\x70\x37\xca\xb6\xc6\x35\x12\xde\xa2\xed\xa6\xad\x8a\x9c\x75\xc8\xaa\x51\xac\x64\x06\xe0\x54\x87\x12\x38\x2a\x5c\x9b\xad\xd0\xb1\x39\xfd\x51\x50\x1a\x25\x6c\xfb\x15\x0a\xda\x13\x63\x97\x51\x40\x9d\x46\x74\x12\x91\xd0\x32\x07\x92\xc3\xe1\xe0\xee\xdd\xcd\xff\xd5\xfc\xaa\x5a\x54\xf5\x72\x72\x3d\xbb\x1f\x0c\x89\x15\x1b\x3d\x3c\x34\xd2\xf0\x99\xb8\x18\x8f\x8a\x71\x31\xfa\xa7\x0f\x87\x47\x59\xf0\xe6\x5b\x06\xf0\xc5\xaf\x66\x9d\xda\xa0\x04\xad\xe2\xce\x68\x5a\xfb\xc8\xed\x70\x6b\x4d\x08\x18\x45\x72\x24\x77\x65\x71\x5e\x94\x62\xd5\x1b\xdb\x8c\xcb\xf1\x59\xf9\xdf\xe8\xdf\xec\x15\xbd\xff\x3d\xdf\xaf\xec\x19\x80\x90\xd3\x3d\x00\x1b\xeb\x57\xca\x16\xc7\x3b\x2f\x70\xad\x7a\xcb\x73\xdc\x18\xe2\xb8\x97\x90\x0f\xee\xea\xdb\x7a\x51\x7d\x58\x5e\x54\x97\x93\x9b\xf7\x8b\xe5\xbc\x7a\x33\xab\x17\xf3\xdb\xe5\x7c\xf2\xf9\x7e\x90\x67\x00\x3b\x65\x7b\xa4\xa9\x77\x8c\x8e\x25\x7c\x17\x07\xdd\xe0\x9b\x89\x73\x3e\xb9\xf1\x8e\x8e\xbb\x00\x42\xf4\x1d\x72\x8b\x3d\x25\xb6\xc1\x27\x18\xf9\x79\x79\x3e\xce\x7f\xda\x40\x3a\xaa\x80\x12\x72\x8e\x3d\x1e\x5b\x42\xf4\x3b\xd3\x60\x7c\x94\x4c\x98\xa3\x43\x46\x9a\xb9\x4d\x44\x7a\x2c\x00\x84\x7e\x65\x0d\xb5\xd8\xd4\x98\xf0\xe0\x53\x05\x00\x9d\x5a\x59\x6c\x52\x76\x3d\x9e\x94\x8d\x8f\x86\xf7\x53\xab\x88\xae\x0e\xb9\xe6\x47\x2c\x42\xdb\x9e\x18\xa3\xd0\xd1\xb0\xd1\xca\x1e\x4f\x31\x07\xf6\x27\xcd\x88\xc1\x93\x61\x7f\xa0\xf6\x22\x8e\x53\x86\x0f\x0e\x59\x6d\x24\xe4\xe3\x62\x54\x16\x67\xc7\x3f\xf6\x16\xe3\x73\x4e\x02\xb6\x98\x64\xa6\xa7\x75\x93\xa6\xf1\x8e\x3e\x3a\xbb\x7f\x10\xf1\x21\x4d\xf8\x28\x21\xaf\xbe\x1a\x62\xca\x5f\x0c\x3a\xdf\xa0\x88\xde\x62\xf1\x44\x27\xf1\xd4\xde\x71\xf4\x56\x04\xab\x1c\xfe\x42\x0b\x00\xd7\x6b\xd4\x29\xa0\x2b\x5f\xeb\x16\x9b\xde\xe2\xef\xad\xe9\x54\xa2\xf5\xe7\xfa\xf4\x32\x2e\x13\x2e\x55\x67\xec\xfe\xda\x5b\xa3\xd3\xde\xeb\x88\x6b\x8c\x17\xbd\xb2\x35\x2b\xbd\xcd\xb3\x1f\x01\x00\x00\xff\xff\xcc\x5d\x0c\xfb\xc0\x04\x00\x00")

func traefikYamlBytes() ([]byte, error) {
	return bindataRead(
		_traefikYaml,
		"traefik.yaml",
	)
}

func traefikYaml() (*asset, error) {
	bytes, err := traefikYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "traefik.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ccm.yaml":           ccmYaml,
	"coredns.yaml":       corednsYaml,
	"local-storage.yaml": localStorageYaml,
	"metrics-server/aggregated-metrics-reader.yaml": metricsServerAggregatedMetricsReaderYaml,
	"metrics-server/auth-delegator.yaml":            metricsServerAuthDelegatorYaml,
	"metrics-server/auth-reader.yaml":               metricsServerAuthReaderYaml,
	"metrics-server/metrics-apiservice.yaml":        metricsServerMetricsApiserviceYaml,
	"metrics-server/metrics-server-deployment.yaml": metricsServerMetricsServerDeploymentYaml,
	"metrics-server/metrics-server-service.yaml":    metricsServerMetricsServerServiceYaml,
	"metrics-server/resource-reader.yaml":           metricsServerResourceReaderYaml,
	"rolebindings.yaml":                             rolebindingsYaml,
	"traefik.yaml":                                  traefikYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ccm.yaml":           &bintree{ccmYaml, map[string]*bintree{}},
	"coredns.yaml":       &bintree{corednsYaml, map[string]*bintree{}},
	"local-storage.yaml": &bintree{localStorageYaml, map[string]*bintree{}},
	"metrics-server": &bintree{nil, map[string]*bintree{
		"aggregated-metrics-reader.yaml": &bintree{metricsServerAggregatedMetricsReaderYaml, map[string]*bintree{}},
		"auth-delegator.yaml":            &bintree{metricsServerAuthDelegatorYaml, map[string]*bintree{}},
		"auth-reader.yaml":               &bintree{metricsServerAuthReaderYaml, map[string]*bintree{}},
		"metrics-apiservice.yaml":        &bintree{metricsServerMetricsApiserviceYaml, map[string]*bintree{}},
		"metrics-server-deployment.yaml": &bintree{metricsServerMetricsServerDeploymentYaml, map[string]*bintree{}},
		"metrics-server-service.yaml":    &bintree{metricsServerMetricsServerServiceYaml, map[string]*bintree{}},
		"resource-reader.yaml":           &bintree{metricsServerResourceReaderYaml, map[string]*bintree{}},
	}},
	"rolebindings.yaml": &bintree{rolebindingsYaml, map[string]*bintree{}},
	"traefik.yaml":      &bintree{traefikYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
